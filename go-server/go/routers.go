/*
 * CyberArk PKIaaS API
 *
 * API for CyberArk's Public-Key Infrastructure (PKI)-as-a-Service
 *
 * API version: 1.0.2
 * Contact: joe.garcia@cyberark.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"GenerateIntermediateCACSR",
		strings.ToUpper("Post"),
		"/ca/generate",
		GenerateIntermediateCACSR,
	},

	Route{
		"GetCA",
		strings.ToUpper("Get"),
		"/ca/certificate",
		GetCA,
	},

	Route{
		"GetCAChain",
		strings.ToUpper("Get"),
		"/ca/chain",
		GetCAChain,
	},

	Route{
		"SetCAChain",
		strings.ToUpper("Post"),
		"/ca/chain/set",
		SetCAChain,
	},

	Route{
		"SetIntermediateCA",
		strings.ToUpper("Post"),
		"/ca/set",
		SetIntermediateCA,
	},

	Route{
		"CreateCertificate",
		strings.ToUpper("Post"),
		"/certificate/create",
		CreateCertificate,
	},

	Route{
		"GetCertificate",
		strings.ToUpper("Get"),
		"/certificate/{serialNumber}",
		GetCertificate,
	},

	Route{
		"ListCertificates",
		strings.ToUpper("Get"),
		"/certificates",
		ListCertificates,
	},

	Route{
		"PurgeCertificates",
		strings.ToUpper("Post"),
		"/purge",
		PurgeCertificates,
	},

	Route{
		"RevokeCertificate",
		strings.ToUpper("Post"),
		"/certificate/revoke",
		RevokeCertificate,
	},

	Route{
		"SignCertificate",
		strings.ToUpper("Post"),
		"/certificate/sign",
		SignCertificate,
	},

	Route{
		"GetCRL",
		strings.ToUpper("Get"),
		"/crl",
		GetCRL,
	},

	Route{
		"PurgeCRL",
		strings.ToUpper("Post"),
		"/crl/purge",
		PurgeCRL,
	},

	Route{
		"CreateTemplate",
		strings.ToUpper("Post"),
		"/template/create",
		CreateTemplate,
	},

	Route{
		"DeleteTemplate",
		strings.ToUpper("Delete"),
		"/template/delete/{templateName}",
		DeleteTemplate,
	},

	Route{
		"GetTemplate",
		strings.ToUpper("Get"),
		"/template/{templateName}",
		GetTemplate,
	},

	Route{
		"ListTemplates",
		strings.ToUpper("Get"),
		"/templates",
		ListTemplates,
	},

	Route{
		"ManageTemplate",
		strings.ToUpper("Put"),
		"/template/manage",
		ManageTemplate,
	},
}
